# Ex:- arr = [1,6,5,11]
# ans = 1 (1+6+5)-(11)


def min_subset_sum(wt,c):
    n = len(wt)
    dp = []
    for i in range(n+1):
        h = []
        for j in range(c+1):
            h.append(-1)
        dp.append(h)

    for y in range(c+1):
        dp[0][y] = 0
    for x in range(n+1):
        dp[x][0] = 1

    for i in range(1,n+1):
        for j in range(1,c+1):
            if wt[i-1] <= j:
                dp[i][j] = max(wt[i-1]+dp[i-1][j-wt[i-1]],dp[i-1][j])
            else:
                dp[i][j] = dp[i-1][j]     
    # print(dp)
    return dp[n][c]
    
    
wt = [3, 1, 4, 2, 2, 1]
c = 0
for i in wt:
    c+=i
if c%2 == 0:
    x = min_subset_sum(wt,int(c/2)-1)
else:
    x = min_subset_sum(wt,int(c/2))
print(abs(c-2*x))
